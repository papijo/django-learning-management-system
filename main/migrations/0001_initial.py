# Generated by Django 4.2.4 on 2023-09-05 15:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Enter Email address.", max_length=254, unique=True
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=30)),
                ("last_name", models.CharField(blank=True, max_length=30)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", main.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="Title of the course.", max_length=100),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the course.", max_length=100
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EducationalInstitution",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the educational institution.", max_length=100
                    ),
                ),
                ("slug", models.SlugField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="InstructorProfile",
            fields=[
                (
                    "staff_id",
                    models.CharField(
                        help_text="Unique staff ID.",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InternProfile",
            fields=[
                (
                    "intern_id",
                    models.CharField(
                        help_text="Unique intern ID.",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "internship_start_date",
                    models.DateField(help_text="Start date of the internship."),
                ),
                (
                    "internship_end_date",
                    models.DateField(help_text="End date of the internship."),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Laboratory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of the laboratory.", max_length=100
                    ),
                ),
                ("slug", models.SlugField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Major",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Name of the major.", max_length=100),
                ),
                ("slug", models.SlugField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("activity", models.TextField(help_text="Description of the task.")),
                (
                    "date_assigned",
                    models.DateField(help_text="Date when the task was assigned."),
                ),
                (
                    "date_completed",
                    models.DateField(help_text="Date when the task was completed."),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "Pending"), ("completed", "Completed")],
                        default="pending",
                        help_text="Status of the task.",
                        max_length=15,
                    ),
                ),
                (
                    "assignee",
                    models.ForeignKey(
                        help_text="Intern to whom the task is assigned.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.internprofile",
                    ),
                ),
                (
                    "assigner",
                    models.ForeignKey(
                        help_text="Teacher assigning the task.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.instructorprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "title",
                    models.CharField(help_text="Title of the subject.", max_length=100),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the subject.", max_length=100
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        help_text="Unique code for the subject.",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "course",
                    models.ManyToManyField(
                        help_text="Courses related to the subject.", to="main.course"
                    ),
                ),
            ],
            options={
                "ordering": ["title", "code"],
            },
        ),
        migrations.CreateModel(
            name="StudentProfile",
            fields=[
                (
                    "student_id",
                    models.CharField(
                        help_text="Unique student ID.",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "course_start_date",
                    models.DateField(help_text="Start date of the course."),
                ),
                (
                    "course_end_date",
                    models.DateField(help_text="End date of the course."),
                ),
                (
                    "courses",
                    models.ManyToManyField(
                        help_text="Courses associated with the student.",
                        to="main.course",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user", "student_id"],
            },
        ),
        migrations.CreateModel(
            name="LearningMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the learning material.", max_length=100
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the learning material.",
                        max_length=100,
                    ),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        help_text="File attachment.",
                        null=True,
                        upload_to="uploads/learningmaterial",
                    ),
                ),
                (
                    "subject",
                    models.OneToOneField(
                        help_text="Subject related to the material.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.subject",
                    ),
                ),
            ],
            options={
                "ordering": ["title", "subject"],
            },
        ),
        migrations.AddField(
            model_name="internprofile",
            name="course",
            field=models.ForeignKey(
                help_text="Major course associated with the intern.",
                on_delete=django.db.models.deletion.CASCADE,
                to="main.major",
            ),
        ),
        migrations.AddField(
            model_name="internprofile",
            name="educational_institution",
            field=models.ForeignKey(
                help_text="Educational institution of the intern.",
                on_delete=django.db.models.deletion.CASCADE,
                to="main.educationalinstitution",
            ),
        ),
        migrations.AddField(
            model_name="internprofile",
            name="laboratory_attached",
            field=models.ForeignKey(
                help_text="Laboratory attached to the intern.",
                on_delete=django.db.models.deletion.CASCADE,
                to="main.laboratory",
            ),
        ),
        migrations.AddField(
            model_name="internprofile",
            name="user",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="BioData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, help_text="User's date of birth.", null=True
                    ),
                ),
                (
                    "address",
                    models.CharField(help_text="User's address.", max_length=100),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="User's phone number.", max_length=11, unique=True
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        help_text="User's avatar.",
                        null=True,
                        upload_to="uploads/users/",
                    ),
                ),
                (
                    "next_of_kin",
                    models.CharField(help_text="User's next of kin.", max_length=100),
                ),
                (
                    "next_of_kin_phone_number",
                    models.CharField(
                        help_text="Next of kin's phone number.", max_length=11
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["user"],
            },
        ),
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField(help_text="Date of assessment.")),
                (
                    "grade",
                    models.DecimalField(
                        decimal_places=2, help_text="Assessment grade.", max_digits=5
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="Additional comments on the assessment.",
                        null=True,
                    ),
                ),
                (
                    "assessment_type",
                    models.CharField(
                        choices=[
                            ("quiz", "Quiz"),
                            ("exam", "Exam"),
                            ("assignment", "Assignment"),
                        ],
                        help_text="Type of assessment.",
                        max_length=20,
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        help_text="Student being assessed.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.studentprofile",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        help_text="Subject being assessed.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Assessment",
                "verbose_name_plural": "Assessments",
            },
        ),
        migrations.CreateModel(
            name="AdminProfile",
            fields=[
                (
                    "staff_id",
                    models.CharField(
                        help_text="Unique staff ID.",
                        max_length=6,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
